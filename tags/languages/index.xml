<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Languages on Maksym Prokopov personal blog</title>
    <link>http://localhost:1313/tags/languages/</link>
    <description>Recent content in Languages on Maksym Prokopov personal blog</description>
    <generator>Hugo</generator>
    <language>ru-Ru</language>
    <lastBuildDate>Sun, 01 Sep 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/languages/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Languages for purpose</title>
      <link>http://localhost:1313/posts/2024-09-01/</link>
      <pubDate>Sun, 01 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2024-09-01/</guid>
      <description>&lt;p&gt;Recently I&amp;rsquo;ve invested some time to learn Elm and it&amp;rsquo;s architecture. Funny, it was made to do Redux with React based programming fun, specifically with types and syntax.&#xA;Immutability from the beginning. Signals. REPL. Packages. OMG. The tooling is just amaizing! Why the heck we don&amp;rsquo;t do more of this?&lt;/p&gt;&#xA;&lt;p&gt;This is quite aligned with where nowadays mainstream goes with EcmaScript 2024 and React 18.&lt;/p&gt;&#xA;&lt;p&gt;Look at the state of Javascript. NPM for package management. Then PNPM, Yarn. Still no repl. Hot reload is there. JSX compilation with Babel. JSX is already a different language.&#xA;Added Typescript for types. Why don&amp;rsquo;t we use just the same goodies packaged in one nice language?&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
