---
title: Вот я и стал коммитить в Clojure опенсорц
author: Max Prokopov
type: post
date: 2016-12-30T14:29:13+00:00
url: /2016/12/вот-я-и-стал-коммитить-в-clojure-опенсорц/
robotsmeta:
  - index,follow
categories:
  - за жизнь

---
<img class="size-large alignleft" src="http://jr0cket.co.uk/images/clojure-logo.png" width="236" height="248" />Я уже как-то признавался в любви языку программирования [Clojure][1], но все руки не доходили до чего-то более-менее серьезного. Всем интересующимся программистам рекомендую почитать [Out of the tar pit][2] про растущую сложность создания и поддержки современных программ, и как с этим бороться.

Разработка на Clojure не похожа на легкую прогулку. Сначала открываешь для себя концепции функционального программирования, начинаешь любить рекурсию, абсолютно под другим углом разворачиваешь мозг и только работая над реальным кодом начинаешь постигать все вот это вот дао функциональщины, принципы разделения и организации кода в неймспейсы, трудности дебага, прелести REPLа.

LightTable, конечно, редактор с характером, но, пожалуй, лучшее из того что есть на сегодняшний день для интерактивной разработки, [почитайте и посмотрите видео у Никиты Прокопова][3] про это. Да-да, не смотря на весь мой опыт с Vim, Emacs, Spacemacs.

Из сложностей, которые поджидают за углом малоопытного кложуриста, я бы отметил понимание работы протоколов, defrecord, макросов и интероп с Java. Нужно довольно четко понимать, когда уместно использование всего этого, а когда нет. Разобраться со всем этим [помогут хорошие книги][4]. Обратной стороной начальной сложности являются в перспективе более краткие и выразительные программы, которые легко и приятно дополнять и расширять.

И вот, работая над Clojure прототипом JSON API нашей админки я незаметно для себя стал контрибьютором в Open Source, чему, конечно, очень рад.

Вот моя первая clojure библиотека для работы с бизнес-временем при расчетах различных SLA. Значительно более элегантное функциональное и гибкое решение, нежели то, которое я запилил когда-то на Ruby. Тестирование в Clojure делается во много раз приятнее, чем рельсовым rspec. Гораздо меньше фрикций на подготовку тестового окружения, да и при желании написание тестов можно проводить прямо в редакторе в том же файле что и само код при интерактивной разработке! А затем переместить все тесты в отдельный выделенный для этого неймспейс.

Собственно вот линк на мою первую библиотеку <https://github.com/mprokopov/business-time>. Пришлось окунуться в <del>не</del>дружелюбный мир Java и разобраться с могучей joda-time и почему у всех реализаций joda-time для clojure отсутствуют то тут то там обертки (wrappers) методов для объектов типа Duration и многого другого.

Также закоммитил pull-request в Korma для лечения [JDBC MySQL timezone issues][5], про наличие которых вообще не подозревал, пока не стал разбираться с business time.
  
<https://github.com/korma/Korma/pull/374>. Вообще Korma это такой почти рельсовый ORM, который выглядит очень удобно для работы с SQL при помощи абстракций, так близких всем рельсовикам. Но что действительно хочется попробовать это мигрировать от MySQL/Postgres в сторону [Datomic][6]. Datomic выглядит той самой &#171;серебрянной пулей&#187; баз данных, которая обладает просто таки уникальными свойствами.

Для разработки JSON API есть подход от использования самого &#171;ничего&#187;, то есть голого Compojure, так и более высокоуровневые Liberator и Pedestal, которые уже больше похожи на фреймворки, нежели библиотеки. Кстати, с Clojure очень хорошо доходит разница между библиотеками и фреймворками, но следует все же помнить, что с большей мощью приходит и большая ответственность.

Делать open source мир вокруг себя богаче легко и приятно, присоединяйтесь, друзья!

 [1]: https://clojure.org/
 [2]: https://www.google.com.ua/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&uact=8&ved=0ahUKEwir8pruipzRAhVNsBQKHfEiDfAQFggaMAA&url=http%3A%2F%2Fshaffner.us%2Fcs%2Fpapers%2Ftarpit.pdf&usg=AFQjCNHuYzfeJD3ahkUtxaPKVw32vVSDJQ&sig2=SDSFDByKzd2D3LucHsw0Rw
 [3]: http://tonsky.me/blog/interactive-development/
 [4]: http://it-ebooks.directory/book-1449366171.html
 [5]: http://stackoverflow.com/questions/26515700/mysql-jdbc-driver-5-1-33-time-zone-issue
 [6]: http://www.datomic.com/